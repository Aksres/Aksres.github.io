<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Aksres&#39;s blog</title>
  
  <subtitle>Dream-Wind Fly</subtitle>
  <link href="https://aksres.github.io/atom.xml" rel="self"/>
  
  <link href="https://aksres.github.io/"/>
  <updated>2021-02-26T12:27:00.458Z</updated>
  <id>https://aksres.github.io/</id>
  
  <author>
    <name>Aksres</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>将你的 Sublime Text 3 打造成完美的 c++ 编辑器</title>
    <link href="https://aksres.github.io/2021/02/26/%E5%B0%86%E4%BD%A0%E7%9A%84%20Sublime%20Text%203%20%E6%89%93%E9%80%A0%E6%88%90%E5%AE%8C%E7%BE%8E%E7%9A%84%20c++%20%E7%BC%96%E8%BE%91%E5%99%A8/"/>
    <id>https://aksres.github.io/2021/02/26/%E5%B0%86%E4%BD%A0%E7%9A%84%20Sublime%20Text%203%20%E6%89%93%E9%80%A0%E6%88%90%E5%AE%8C%E7%BE%8E%E7%9A%84%20c++%20%E7%BC%96%E8%BE%91%E5%99%A8/</id>
    <published>2021-02-25T17:13:24.000Z</published>
    <updated>2021-02-26T12:27:00.458Z</updated>
    
    <content type="html"><![CDATA[<p>搭建需要的东西都在 <a href="https://pan.baidu.com/s/1tytGGIjlWZ_-LIu3YKOINQ">这个链接</a> 中。</p><p>提取码：7sap </p><h3 id="Part-0-前言"><a href="#Part-0-前言" class="headerlink" title="Part 0 前言"></a>Part 0 前言</h3><p>Sublime Text 3 是一种实用性较强的编辑工具。</p><p><del>没错就这么多</del></p><p><del>诶不是还能说什么</del></p><h3 id="Part-1-下载配置-Sublime-Text-3"><a href="#Part-1-下载配置-Sublime-Text-3" class="headerlink" title="Part 1 下载配置 Sublime Text 3"></a>Part 1 下载配置 Sublime Text 3</h3><p><strong>下载</strong></p><p><a href="http://www.sublimetext.cn/">官网</a></p><p>当然也可以用我的安装包下载。版本号为 $3211$。</p><p>下载完成后，打开 Sublime ，你会看到这样一个界面。</p><p>如果没有找到， 就 Win + R ，输入 Sublime 回车。</p><p><a href="https://imgtu.com/i/yzq658"><img src="https://s3.ax1x.com/2021/02/26/yzq658.png" alt="yzq658.png"></a></p><p>（最右下角有个框，是代码语言选择区）</p><p>先别急着操作，在你的 Sublime 下载目录下新建一个叫 Data 的文件夹，重启 Sublime ，然后你的数据就会被保存到 Data 里。</p><p><strong>激活 Sublime</strong></p><p>如果看到左上方显示 UNREGISTERED ，就是说你的 Sublime 没有激活。</p><p>先查看版本号， 点击 <code>Help &gt; About Sublime Text</code> ，找到 Build 后面的数字，然后百度一下激活码。将激活码粘贴到 <code>Help &gt; Enter Lisence</code> 。</p><p>下面是 $3211$ 的激活码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">----- BEGIN LICENSE -----</span><br><span class="line">Member J2TeaM</span><br><span class="line">Single User License</span><br><span class="line">EA7E-1011316</span><br><span class="line">D7DA350E 1B8B0760 972F8B60 F3E64036</span><br><span class="line">B9B4E234 F356F38F 0AD1E3B7 0E9C5FAD</span><br><span class="line">FA0A2ABE 25F65BD8 D51458E5 3923CE80</span><br><span class="line">87428428 79079A01 AA69F319 A1AF29A4</span><br><span class="line">A684C2DC 0B1583D4 19CBD290 217618CD</span><br><span class="line">5653E0A0 BACE3948 BB2EE45E 422D2C87</span><br><span class="line">DD9AF44B 99C49590 D2DBDEE1 75860FD2</span><br><span class="line">8C8BB2AD B2ECE5A4 EFC08AF2 25A9B864</span><br><span class="line">------ END LICENSE ------</span><br></pre></td></tr></table></figure><p><strong>配置 Package Control</strong></p><p><strong>阅读以下步骤前，请确保 Sublime 已经激活！</strong></p><p>Package Control 是 Sublime 的插件管理器，必须要安装 Package Control 才能下载和使用插件。</p><p>安装 Package Control 有两种办法。第一种办法是 Ctrl + ` 打开以下界面。在红色标记的地方输入以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import urllib.request,os,hashlib; h &#x3D; &#39;6f4c264a24d933ce70df5dedcf1dcaee&#39; + &#39;ebe013ee18cced0ef93d5f746d80ef60&#39;; pf &#x3D; &#39;Package Control.sublime-package&#39;; ipp &#x3D; sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by &#x3D; urllib.request.urlopen( &#39;http:&#x2F;&#x2F;packagecontrol.io&#x2F;&#39; + pf.replace(&#39; &#39;, &#39;%20&#39;)).read(); dh &#x3D; hashlib.sha256(by).hexdigest(); print(&#39;Error validating download (got %s instead of %s), please try manual install&#39; % (dh, h)) if dh !&#x3D; h else open(os.path.join( ipp, pf), &#39;wb&#39; ).write(by)</span><br></pre></td></tr></table></figure><p><a href="https://imgchr.com/i/yR4Nrj"><img src="https://s3.ax1x.com/2021/02/18/yR4Nrj.png" alt="yR4Nrj.png"></a></p><p>但是，如果你不会珂学上网或者翻墙，这种方法很可能不行，这时候就要采用第二种方法。</p><p>在 Sublime 的安装目录下打开 <code>Data &gt; Installed Packages</code> ，将材料里的 <code>Package Control.sublime-package</code> 复制到这个文件夹里。重启 Sublime 。如果看到 Preferences 里出现了红色圈圈里的两个东西，就说明安装成功了。</p><p><a href="https://imgchr.com/i/yR5uSU"><img src="https://s3.ax1x.com/2021/02/18/yR5uSU.png" alt="yR5uSU.png"></a></p><p><strong>配置 channel</strong></p><p><del>千万不要下载完 Package Control 就不看这一步啊，报错了别来找我啊</del></p><p>材料里有一个 <code>channel_v3.json</code> ，把它放到 Sublime 的下载文件夹里。</p><p>打开 <code>Preferences &gt; Package Settings &gt; Package Control &gt; Setting - User</code> ，在 <code>&quot;bootstrapped&quot;: true,</code> 后面粘贴以下内容（那个路径就是你放这个文件的路径）</p><p><img src="https://i.loli.net/2021/02/18/5BATh9oPYHtb24G.png" alt="Screenshot_4.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;channels&quot;</span>:</span><br><span class="line">[</span><br><span class="line">        <span class="string">&quot;D:/Sublime Text 3/channel_v3.json&quot;</span> </span><br><span class="line">],</span><br></pre></td></tr></table></figure><p>然后就可以了。</p><p><strong>安装插件和主题</strong></p><p>Sublime 本身提供了几种主题和配色方案，可以在这里寻找。</p><p><img src="https://i.loli.net/2021/02/18/vikxJ4tIMjlYzTN.png" alt="Screenshot_5.png"></p><p>安装插件同样有两种办法，一种是 <code>Ctrl + Shift + P </code> 打开并找到 <code>Install Package</code>  ，然后输入插件名下载。</p><p>如果下载几十分钟都没出来，说明插件被墙了，这时候就需要百度，从<del>插件官网</del> Github 上把插件包搞下来，解压后放到 <code>Data &gt; Packages</code> 里。然后就能使用了。</p><p>这里推荐一个主题 ： Ayu</p><p>这个主题有三种，Dark , Light 和 mirage 。</p><p>食用效果 ：</p><p><img src="https://i.loli.net/2021/02/18/1XVdO8g3MeLT9Ew.png" alt="Screenshot_6.png"></p><p>（建议不要使用 Ayu 的配色方案，<del>眼睛可能会没</del>）</p><p>再推荐两个配色方案， <code>One Dark</code> 和 <code>Solarized Light</code> 。</p><p>食用效果 ：</p><figure class="highlight plain"><figcaption><span>Dark``` :</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">![Screenshot_3.png](https:&#x2F;&#x2F;i.loli.net&#x2F;2021&#x2F;02&#x2F;23&#x2F;taCqx82fjYyVHKr.png)</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;Solarized Light&#96;&#96;&#96; ：</span><br><span class="line"></span><br><span class="line">![Screenshot_2.png](https:&#x2F;&#x2F;i.loli.net&#x2F;2021&#x2F;02&#x2F;23&#x2F;47TQ6ck3jFryiNZ.png)</span><br><span class="line"></span><br><span class="line">如果需要汉化，可以在 Install package 里搜索 ChineseLocalizations 并下载，这个插件不会被墙掉。然后在 &#96;&#96;&#96;Help &gt; Languages &#96;&#96;&#96; 中更改语言。</span><br><span class="line"></span><br><span class="line">**卸载插件**</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;Ctrl + Shift + P &#96;&#96;&#96; 并找到 &#96;&#96;&#96;Remove Packages&#96;&#96;&#96; 选择要删除的插件。</span><br><span class="line"></span><br><span class="line">**推荐几个好用的插件**</span><br><span class="line"></span><br><span class="line">- &#96;&#96;&#96;Convert to UTF8 &#96;&#96;&#96; 解决中文乱码 [项目地址](https:&#x2F;&#x2F;github.com&#x2F;seanliang&#x2F;ConvertToUTF8)</span><br><span class="line">- &#96;&#96;&#96;Git&#96;&#96;&#96; 将你的 Sublime 变成 Git 编辑器，基本上涵盖了 Git 软件的内容 （可以用 &#96;&#96;&#96;Package Control&#96;&#96;&#96; 下载）</span><br><span class="line">- &#96;&#96;&#96;SublimeREPL&#96;&#96;&#96; 实现程序交互，可以让 Python ， F# ，PHP ， Ruby ， Lua 等一堆语言可以输入。</span><br><span class="line">- &#96;&#96;&#96;Less&#96;&#96;&#96; 支持 Less 程序高亮。</span><br><span class="line">- &#96;&#96;&#96;Emmet&#96;&#96;&#96; 编写快捷键。 [官网](https:&#x2F;&#x2F;docs.emmet.io&#x2F;)</span><br><span class="line">- &#96;&#96;&#96;JSformet&#96;&#96;&#96; 格式化 Javascript 代码</span><br><span class="line">[项目地址](https:&#x2F;&#x2F;github.com&#x2F;jdavisclark&#x2F;JsFormat)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### Part 2 下载配置 C++ 编译环境</span><br><span class="line"></span><br><span class="line">**安装 TDM-GCC**</span><br><span class="line"></span><br><span class="line">TDM-GCC 是一款 C++ 编译器，不用 Mingw64 的原因是这个菜鸡到现在还不知道 Mingw 怎么用。。。</span><br><span class="line"></span><br><span class="line">TDM-GCC的安装包在材料里。[这是官网](https:&#x2F;&#x2F;jmeubank.github.io&#x2F;tdm-gcc&#x2F;)</span><br><span class="line"></span><br><span class="line">这是 TDM-GCC 的安装界面，打开后点击 Create ，然后无脑式安装就可以了。**一定要把左下打圈圈的钩子给去掉！！！！！！**</span><br><span class="line"></span><br><span class="line">![Screenshot_7.png](https:&#x2F;&#x2F;i.loli.net&#x2F;2021&#x2F;02&#x2F;19&#x2F;BLIR3AhQezK1dur.png)</span><br><span class="line"></span><br><span class="line">**验证和配制环境变量**</span><br><span class="line"></span><br><span class="line">TDM-GCC 应该会自动帮你配置环境变量。但是也需要检查一下。</span><br><span class="line"></span><br><span class="line">打开 cmd ，输入 &#96;&#96;&#96;gcc -v&#96;&#96;&#96; 如果没有报错就是成功。应该会出现如下界面。</span><br><span class="line"></span><br><span class="line">![Screenshot_8.png](https:&#x2F;&#x2F;i.loli.net&#x2F;2021&#x2F;02&#x2F;19&#x2F;9oINJeLFQKDnlGg.png)</span><br><span class="line"></span><br><span class="line">但是报错的话，就需要手动配置环境变量。</span><br><span class="line"></span><br><span class="line">右键桌面上的计算机图标，点击属性，点击高级系统设置 &gt; 高级 &gt; 环境变量 ，在下面的系统变量中找到 Path ，点击编辑，打一个分号之后输入你 TDM-GCC 的安装路径，再在后面打一个 &#96;&#96;&#96;\bin&#96;&#96;&#96; ，对我来说就是 &#96;&#96;&#96;C:\TDM-GCC-64\bin&#96;&#96;&#96;</span><br><span class="line"></span><br><span class="line">![Screenshot_9.png](https:&#x2F;&#x2F;i.loli.net&#x2F;2021&#x2F;02&#x2F;26&#x2F;MIY72b5lxPetj68.png)</span><br><span class="line"></span><br><span class="line">然后再验证一下~~没事找事~~</span><br><span class="line"></span><br><span class="line">### Part 3 搭建 c++ 环境</span><br><span class="line"></span><br><span class="line">**新建编译选项**</span><br><span class="line"></span><br><span class="line">点击 &#96;&#96;&#96;Tools &gt; Build System &gt; New Build Systen &#96;&#96;&#96; ，将里面的内容替换为以下内容 ：</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;javascript</span><br><span class="line">&#123;</span><br><span class="line">    &quot;encoding&quot;: &quot;utf-8&quot;,</span><br><span class="line"></span><br><span class="line">    &quot;working_dir&quot;: &quot;$file_path&quot;,</span><br><span class="line"></span><br><span class="line">    &quot;shell_cmd&quot;: &quot;g++ -Wall -std&#x3D;c++11 \&quot;$file_name\&quot; -o \&quot;$file_base_name\&quot;&quot;,</span><br><span class="line"></span><br><span class="line">    &quot;file_regex&quot;: &quot;^(..[^:]*):([0-9]+):?([0-9]+)?:? (.*)$&quot;,</span><br><span class="line"></span><br><span class="line">    &quot;selector&quot;: &quot;source.c++&quot;,</span><br><span class="line"> </span><br><span class="line">    &quot;variants&quot;:</span><br><span class="line">    [</span><br><span class="line">        &#123;  </span><br><span class="line">        &quot;name&quot;: &quot;Sublime Run&quot;,</span><br><span class="line">            &quot;shell_cmd&quot;: &quot;g++ -Wall -std&#x3D;c++11 \&quot;$file_name\&quot; -o \&quot;$file_base_name\&quot; &amp;&amp; cmd &#x2F;c \&quot;$&#123;file_path&#125;&#x2F;$&#123;file_base_name&#125;\&quot;&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;  </span><br><span class="line">        &quot;name&quot;: &quot;CMD Run&quot;,</span><br><span class="line">            &quot;shell_cmd&quot;: &quot;g++ -Wall -std&#x3D;c++11 \&quot;$file\&quot; -o \&quot;$file_base_name\&quot; &amp;&amp; start cmd &#x2F;c \&quot;\&quot;$&#123;file_path&#125;&#x2F;$&#123;file_base_name&#125;\&quot; &amp; pause\&quot;&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中 <code>&quot;name&quot;:</code> 后面名字的可以自己更改。</p><p>Ctrl + S <strong>不要更改路径</strong>保存为 <code>name.sublime-build</code> 其中 <code>name</code> 里的可以自己更改<del>有时候你会觉得自己发明了一个语言</del></p><p><strong>编译运行</strong></p><p>Ctrl + Shift + B ,你会发现三个框。</p><p><a href="https://imgtu.com/i/yLLSv6"><img src="https://s3.ax1x.com/2021/02/24/yLLSv6.png" alt="yLLSv6.png"></a></p><p>第一个框就是检查一下你有没有编译错误 （相当于 Dev 的编译），第二个框是在 sublime 的内置终端内运行，没什么用因为不能实现输入。一般用的就是第三个 ，像 Dev 一样在 cmd 内运行。</p><p><strong>设置快捷键</strong></p><p>Ctrl + Shift + B 用不惯 ？可以设置快捷键！</p><p>点击 <code>Preferences &gt; Key Bingdings </code> 在框内输入以下代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123; <span class="string">&quot;keys&quot;</span>: [<span class="string">&quot;f6&quot;</span>], <span class="string">&quot;command&quot;</span>: <span class="string">&quot;build&quot;</span>, <span class="string">&quot;args&quot;</span>: &#123;<span class="string">&quot;select&quot;</span>: <span class="literal">true</span>&#125; &#125;</span><br></pre></td></tr></table></figure><p>这样你的编译运行只要点一下 <code>F6</code> 就会出来框。</p><p><strong>录制宏</strong></p><p>想要秒出代码？宏录制在这里！</p><p>新建一个空白页，然后 Ctrl + Q ，输入你想录制的宏，然后再次 Ctrl + Q 。如果录制成功的话左下角会显示 <code>recorded macro with xxx commands</code> 。</p><figure class="highlight plain"><figcaption><span>> Save Macro ``` 不要更改路径保存为 ```name.sublime-macro``` 。 ```name``` 里的自行更改。</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">然后点击 &#96;&#96;&#96;Preferences &gt; Key Bingdings &#96;&#96;&#96; ，在右边加入以下代码 ：</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;javascript</span><br><span class="line">&#123; &quot;keys&quot;: [&quot;ctrl+d&quot;], &quot;command&quot;:&quot;run_macro_file&quot;, &quot;args&quot;:&#123;&quot;file&quot;:&quot;Packages&#x2F;User&#x2F;name.sublime-macro&quot;&#125; &#125;</span><br></pre></td></tr></table></figure><p><code>name</code> 就是你保存的名字。</p><p>快捷键可以自己更改，但是 Sublime 的快捷键非常多，所以建议在更改前点击 <code>Find &gt; Find</code> 查找一下有没有冲突，如图所示：</p><p><a href="https://imgtu.com/i/yLqx81"><img src="https://s3.ax1x.com/2021/02/24/yLqx81.png" alt="yLqx81.png"></a></p><p>如果右下角显示 <code>Unable to find xxxxx</code> ，就表明可以使用。</p><p><strong>Part 4 后记</strong></p><p>初次接触 Sublime 应该是搭建 hexo 博客的时候。。。</p><p>然后自己搭建编译器和编辑器的时候，几乎是把 OI-Wiki 上的都试遍了，但是还是弄不出来。。。<del>明明就是自己菜</del></p><p>然后就想到了 Sublime ，然后发现确实很好用。。。</p><p><del>然后就没有然后了</del></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;搭建需要的东西都在 &lt;a href=&quot;https://pan.baidu.com/s/1tytGGIjlWZ_-LIu3YKOINQ&quot;&gt;这个链接&lt;/a&gt; 中。&lt;/p&gt;
&lt;p&gt;提取码：7sap &lt;/p&gt;
&lt;h3 id=&quot;Part-0-前言&quot;&gt;&lt;a href=&quot;#Part-0-</summary>
      
    
    
    
    
    <category term="工具" scheme="https://aksres.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>题解【算法1-6】二分查找与二分答案 题单</title>
    <link href="https://aksres.github.io/2021/02/17/%E9%A2%98%E8%A7%A3%E3%80%90%E7%AE%97%E6%B3%951-6%E3%80%91%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E4%B8%8E%E4%BA%8C%E5%88%86%E7%AD%94%E6%A1%88%20%E9%A2%98%E5%8D%95/"/>
    <id>https://aksres.github.io/2021/02/17/%E9%A2%98%E8%A7%A3%E3%80%90%E7%AE%97%E6%B3%951-6%E3%80%91%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E4%B8%8E%E4%BA%8C%E5%88%86%E7%AD%94%E6%A1%88%20%E9%A2%98%E5%8D%95/</id>
    <published>2021-02-16T19:14:17.000Z</published>
    <updated>2021-02-19T06:37:23.172Z</updated>
    
    <content type="html"><![CDATA[<h3 id="T1-P2249-【深基13-例1】查找"><a href="#T1-P2249-【深基13-例1】查找" class="headerlink" title="T1 P2249 【深基13.例1】查找"></a><a href="https://www.luogu.com.cn/problem/P2249">T1 P2249 【深基13.例1】查找</a></h3><p>二分查找的板子</p><a id="more"></a><p>二分查找需要定义三个变量，$l$ (序列的左端)，$r$ (序列的右端)和 $mid$ (中间点)。二分查找的前提是<strong>序列有序</strong>（一般是升序排列）。</p><p>二分查找的原理为：如果中间数小于查找数，那么位置一定在中间数的右边，反之左边。当序列长度为1时停止查找。</p><p>以下是程序的板子，最后输出 $l$ 即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(l&lt;r)</span><br><span class="line">&#123;</span><br><span class="line">        mid=(l+r)/<span class="number">2</span>; <span class="comment">//防溢出的话也可以写成l+(r-l)/2</span></span><br><span class="line">        <span class="keyword">if</span>(a[mid]&gt;=x) r=mid;</span><br><span class="line">        <span class="keyword">else</span> l=mid+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当然如果你懒得打 $mid+1$ 的话，也可以写本人比较喜欢的板子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">l&#x3D;1;r&#x3D;n+1; &#x2F;&#x2F;注意这里和下面的的+1</span><br><span class="line">while(l+1&lt;r) </span><br><span class="line">&#123;</span><br><span class="line">        mid&#x3D;(l+r)&#x2F;2;</span><br><span class="line">        if(a[mid]&gt;&#x3D;x) r&#x3D;mid;</span><br><span class="line">        else l&#x3D;mid;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然而这个板子的答案有时候会玄学的出现在 $l,l-1,l+1$ 中的一个，所以需要特判。如果这三个答案都不等于查找数，那就是找不到。</p><p>该算法单次查询时间复杂度为 $O(\log n)$ ，可以通过本题。</p><p>AC Code ：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,a[<span class="number">1000010</span>],x,mid,l,r;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);<span class="comment">//因为题目里已经说了有序，就不用再排序了。</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">        l=<span class="number">1</span>;r=n+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(l+<span class="number">1</span>&lt;r)</span><br><span class="line">        &#123;</span><br><span class="line">            mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(a[mid]&gt;=x) r=mid;</span><br><span class="line">            <span class="keyword">else</span> l=mid;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(a[l]==x) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,l);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a[l+<span class="number">1</span>]==x) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,l+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;-1 &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="T2-P1102-A-B-数对"><a href="#T2-P1102-A-B-数对" class="headerlink" title="T2 P1102 A-B 数对"></a><a href="https://www.luogu.com.cn/problem/P1102">T2 P1102 A-B 数对</a></h3><p><del>二分题单？我就不用二分</del></p><p><del>其实是这个菜鸡不会写二分</del></p><p>对于这道题，我们只需要把等式变成 $A=B+C$ ，然后用一个 map 记录 $a_i$ 出现的次数。然后将每个 $a_i+c$ 的出现次数累加即可。</p><p>因为这题比较简单，所以只要把 map 当普通数组用就行了<del>本来就是这样</del></p><p>当然二分也可以，枚举 $b$ ，二分查找满足的 $c$ 即可。</p><p>AC Code ：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> x,a[<span class="number">2000010</span>],s; <span class="comment">//要注意的是longlong</span></span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">long</span> <span class="keyword">long</span>,<span class="keyword">long</span> <span class="keyword">long</span>&gt; b;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;x;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;a[i]);</span><br><span class="line">        b[a[i]]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) s+=b[a[i]+x];</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;s;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="T3-P1873-砍树"><a href="#T3-P1873-砍树" class="headerlink" title="T3 P1873 砍树"></a><a href="https://www.luogu.com.cn/problem/P1873">T3 P1873 砍树</a></h3><p>二分算法分为两种，二分查找和二分答案。</p><p>本题就是二分答案的板子。</p><p>二分答案的原理是，在一个范围内查找符合题意的最大的答案。（也有可能不是最大）。别的和二分查找基本相同。</p><p>和二分查找不同的是，二分答案的范围不是从 $1$ 到 $n$ ，同时二分答案多了一个用来检查 $mid$ 是否合法的 check 函数（也可以写在二分 while 循环内）</p><p>二分答案的板子</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>);</span><br><span class="line">l=<span class="number">1</span>;r=最大的范围（一般为max&#123;a[i]&#125;+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">while</span>(l+<span class="number">1</span>&lt;r)</span><br><span class="line">&#123;</span><br><span class="line">    mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span>(check(mid)) l=mid;</span><br><span class="line">    <span class="keyword">else</span> r=mid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;l;</span><br><span class="line">        </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    定义</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">      <span class="keyword">do</span> something.....</span><br><span class="line">    <span class="keyword">return</span> 合法条件</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对于本题，首先确定查找范围 $1$ 到 $\max{a_i}+1 $。 </p><p><del>LaTeX不会写</del></p><p>然后就是 check 函数，只要求出 $\sum_{i=1}^N a_k-mid$，然后把它和 $m$ 比较就行了。</p><p>时间复杂度为 $O(n \log n)$ ，可以通过本题。</p><p>AC Code :</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> l,r,mx,a[<span class="number">1000010</span>],m,mid;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> s=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">      <span class="keyword">if</span>(a[i]&gt;x) s+=(a[i]-x);</span><br><span class="line">    <span class="keyword">if</span>(s&gt;=m) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;<span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;a[i]);mx=max(mx,a[i]);&#125;</span><br><span class="line">    sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>);</span><br><span class="line">    l=<span class="number">1</span>;r=mx+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(l+<span class="number">1</span>&lt;r)</span><br><span class="line">    &#123;</span><br><span class="line">        mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(check(mid)) l=mid;</span><br><span class="line">        <span class="keyword">else</span> r=mid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;l;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="T4-P1024-NOIP2001-提高组-一元三次方程求解"><a href="#T4-P1024-NOIP2001-提高组-一元三次方程求解" class="headerlink" title="T4 P1024 [NOIP2001 提高组] 一元三次方程求解"></a><a href="https://www.luogu.com.cn/problem/P1024">T4 P1024 [NOIP2001 提高组] 一元三次方程求解</a></h3><p><del>这[数据删除]是二分？</del></p><p>本题暴力即可。这题掉红的原因就是因为可以暴力。</p><p>AC Code ：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">double</span> a,b,c,d;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b&gt;&gt;c&gt;&gt;d;</span><br><span class="line">   <span class="keyword">for</span>(<span class="keyword">double</span> i=<span class="number">-100</span>;i&lt;=<span class="number">100</span>;i+=<span class="number">0.001</span>)</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">double</span> j=i+<span class="number">0.001</span>;</span><br><span class="line">      <span class="keyword">double</span> x=a*i*i*i+b*i*i+c*i+d;</span><br><span class="line">      <span class="keyword">double</span> y=a*j*j*j+b*j*j+c*j+d;</span><br><span class="line">      <span class="keyword">if</span>(x&gt;=<span class="number">0</span>&amp;&amp;y&lt;=<span class="number">0</span>||x&lt;=<span class="number">0</span>&amp;&amp;y&gt;=<span class="number">0</span>)</span><br><span class="line">         <span class="built_in">printf</span>(<span class="string">&quot;%.2lf &quot;</span>,i);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><del>诶那你倒是写个二分啊？</del></p><p><del>懒的写</del></p><h3 id="T5-P1678-烦恼的高考志愿"><a href="#T5-P1678-烦恼的高考志愿" class="headerlink" title="T5 P1678 烦恼的高考志愿"></a><a href="https://www.luogu.com.cn/problem/P1678">T5 P1678 烦恼的高考志愿</a></h3><p>因为要相差最小，所以用二分查找到最接近 $b_i$且小于其的 $a_l$,然后取 $|a_lk-b_i|,|a^{l-1}-b_i|,|a^{l+1}-b_i|$ 的最小值即可。</p><p>同时当 $b_i&lt;a_1$ 或$b_i&gt;a_n$时特判。</p><p>AC code ：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> a[<span class="number">100100</span>],b[<span class="number">100100</span>],s,l,r,mid;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;b[i]);</span><br><span class="line">    sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        l=<span class="number">1</span>;r=n+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(l+<span class="number">1</span>&lt;r)</span><br><span class="line">        &#123;</span><br><span class="line">            mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(a[mid]&lt;b[i]) l=mid;</span><br><span class="line">            <span class="keyword">else</span> r=mid;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(b[i]&lt;a[<span class="number">1</span>]) s+=<span class="built_in">abs</span>(a[<span class="number">1</span>]-b[i]);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(b[i]&gt;a[n]) s+=<span class="built_in">abs</span>(b[i]-a[n]);</span><br><span class="line">        <span class="keyword">else</span> s+=min(min(<span class="built_in">abs</span>(a[l+<span class="number">1</span>]-b[i]),<span class="built_in">abs</span>(a[l<span class="number">-1</span>]-b[i])),<span class="built_in">abs</span>(a[l]-b[i]));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;s;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="T6-P2440-木材加工"><a href="#T6-P2440-木材加工" class="headerlink" title="T6 P2440 木材加工"></a><a href="https://www.luogu.com.cn/problem/P2440">T6 P2440 木材加工</a></h3><p>二分答案的板子。</p><p>对于这道题，需要二分答案的就是题目所求的最大值。如果长度为 $mid$ 那么第 $i$ 个木条就会被切割成 $\left\lfloor\dfrac{a_i}{mid}\right\rfloor$ 断，因此求出$\sum_{i=1}^N \left\lfloor\dfrac{a_i}{mid}\right\rfloor$ 的值，和 $m$ 进行比较，就是 check 函数了。</p><p>因为最大的一段不肯能超过 $\max{a_i}$ ,所以把 $r$ 的初始值定为 $\max{a_i}+1$。</p><p>对于 $0$ 的情况，因为切 $1$ 厘米的小段就是段数最多的情况，所以将读入的 $a$ 数组求和，如果和小于 $m$ ，则就是切不出来。</p><p>AC Code ：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,l,r,mid;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> a[<span class="number">100010</span>],mx,m,sum;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> s=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) s+=a[i]/x;</span><br><span class="line">    <span class="keyword">if</span>(s&gt;=m) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;<span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;a[i]);mx=max(mx,a[i]);sum+=a[i];&#125;</span><br><span class="line">    <span class="keyword">if</span>(sum&lt;m) &#123;<span class="built_in">cout</span>&lt;&lt;<span class="number">0</span>;<span class="keyword">return</span> <span class="number">0</span>;&#125;</span><br><span class="line">    l=<span class="number">1</span>;r=mx+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(l+<span class="number">1</span>&lt;r)</span><br><span class="line">    &#123;</span><br><span class="line">        mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(check(mid)) l=mid;</span><br><span class="line">        <span class="keyword">else</span> r=mid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;l;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="T7-P2678-NOIP2015-提高组-跳石头"><a href="#T7-P2678-NOIP2015-提高组-跳石头" class="headerlink" title="T7 P2678 [NOIP2015 提高组] 跳石头"></a><a href="https://www.luogu.com.cn/problem/P2678">T7 P2678 [NOIP2015 提高组] 跳石头</a></h3><p><del>不错，长得真像二分。</del></p><p><del>本来就是二分</del></p><p><strong>Part 1 预处理</strong></p><p><del>弄得这么高大上干嘛</del></p><p>题目给你的只是中间的距离，还需要处理起点和终点，所以 $a_0=1$ ， $a_{n+1}=l$</p><p>然后确定搜索范围，本题需要二分答案的依然是题目所求的，所以 $left=1$ ，$right=l+1$ 。</p><p><strong>Part 2 check 函数</strong></p><p>$t$ 表示共移走的石头， $k$ 表示不需要移走的石头的下标。</p><p>那么，当 $a_i$ 和 $a_k$ 的距离小于待验证距离 $mid$ 时，就需要移走一块石头，因为题目要求的是最大值，所以两块距离大于等于 $mid$ 的石头之间不应该再有多余的石头。</p><p>AC code :</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 2147483647</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> l,r,mid,d,a[<span class="number">123333</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">check</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> k=<span class="number">0</span>,t=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n+<span class="number">1</span>;i++)</span><br><span class="line">      <span class="keyword">if</span>(a[i]-a[k]&lt;x)  t++;</span><br><span class="line">      <span class="keyword">else</span> k=i;</span><br><span class="line">    <span class="keyword">return</span> t&lt;=m;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;d&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;a[i]);</span><br><span class="line">    a[n+<span class="number">1</span>]=d;</span><br><span class="line">    sort(a+<span class="number">1</span>,a+n+<span class="number">2</span>);</span><br><span class="line">    l=<span class="number">0</span>;r=d+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(l+<span class="number">1</span>&lt;r)</span><br><span class="line">    &#123;</span><br><span class="line">        mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(check(mid)) l=mid;</span><br><span class="line">        <span class="keyword">else</span> r=mid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;l;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="T8-P3853-TJOI2007-路标设置"><a href="#T8-P3853-TJOI2007-路标设置" class="headerlink" title="T8 P3853 [TJOI2007]路标设置"></a><a href="https://www.luogu.com.cn/problem/P3853">T8 P3853 [TJOI2007]路标设置</a></h3><p>没什么可说的了<del>你还想说什么</del>，直接写 check 函数。</p><p>设待验证的空旷指数为 $x$ ，那么当有 $a_i-a_{i-1} &gt; x$ 时，就需要添加路牌。<br>需要注意的是，当 $a_i-a_{i-1}$ 能被 $x$ 整除时，其中一端的路牌就不用加了。</p><p>用代码写出来是这样的</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//ans表示一共添加的路牌数量</span></span><br><span class="line"><span class="keyword">if</span>((a[i]-a[i<span class="number">-1</span>])%x==<span class="number">0</span>) ans+=(a[i]-a[i<span class="number">-1</span>])/x<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">else</span> ans+=(a[i]-a[i<span class="number">-1</span>])/x;</span><br></pre></td></tr></table></figure><p>最后把 $ans$ 和 $k$ 比较即可。</p><hr><p>还有一个坑点，这题的答案是求最小值，而前面的题目是最大值，所以需要把二分判断中的 <code>if(check(mid))</code> 改成 <code>if(!check(mid))</code> 。</p><p>AC Code ：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> p,n,m,l,r,mid,a[<span class="number">233333</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">if</span>(a[i]-a[i<span class="number">-1</span>]&gt;=x) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>((a[i]-a[i<span class="number">-1</span>])%x==<span class="number">0</span>) ans+=(a[i]-a[i<span class="number">-1</span>])/x<span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">else</span> ans+=(a[i]-a[i<span class="number">-1</span>])/x;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> ans&lt;=m;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;p&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">    l=<span class="number">1</span>;r=p+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(l+<span class="number">1</span>&lt;r)</span><br><span class="line">    &#123;</span><br><span class="line">        mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(!check(mid)) l=mid;</span><br><span class="line">        <span class="keyword">else</span> r=mid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;l+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="T9-P1182-数列分段-Section-II"><a href="#T9-P1182-数列分段-Section-II" class="headerlink" title="T9 P1182 数列分段 Section II"></a><a href="https://www.luogu.com.cn/problem/P1182">T9 P1182 数列分段 Section II</a></h3><p><del>菜到先用爆搜写了 1h ，再用区间 dp 写了 1h 。。。。</del></p><p>最后发现这题二分的依然是答案 （（（（（</p><hr><p>主程序依旧是板子，二分题目的颜色估计就是 check 函数决定吧。。。</p><p>唯一注意的就是 $l$ 需要定义成 $a_i$ 中的最大值，$r$ 需要定义成所有 $a_i$ 的和。分别表示切 $n-1$ 段和切 $1$ 。</p><p>定义 $s$ 表示每段之和, $t$ 表示分的段数，待验证的答案为 $x$。则当 $s+a_i &gt; x $ 时，就需要重新分一段，同时将 $i-1$ 作为新一段的起点。</p><p>最后将 $t$ 和 $m$ 比较即可。</p><p>AC code ：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,l,r,mid,sum,a[<span class="number">233333</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> s=<span class="number">0</span>,t=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">      <span class="keyword">if</span>(s+a[i]&lt;=x) s+=a[i];</span><br><span class="line">      <span class="keyword">else</span> &#123;s=a[i];t++;&#125;</span><br><span class="line">    <span class="keyword">return</span> t&gt;=m;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">        r+=a[i];</span><br><span class="line">        l=max(l,a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(l&lt;=r)</span><br><span class="line">    &#123;</span><br><span class="line">        mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(check(mid)) l=mid+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> r=mid<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;l;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>最后说一下吧，这种类似于贪心的策略是错误的，题目中给出的例子很明显的 hack 了这个代码，它似乎只会把 $4$ 和 $2$ 放一段，而不会把 $4$ 单独放。本来这个代码只有 $20$ 分，但是将我自己的板子换成传统的二分板子之后就 AC 了，可能是数据的问题。</p><p>在第一篇题解下面的评论区中确实有人提出过，但是没有被重视。所以我希望大佬们可以解答一下我的疑惑。</p><p>这题正确的方法应该是前缀和二分，但我自己的板子再次被卡掉了，如果 $l+1$ 输出就有 $80$ 但是第四个点恰好不需要加一。</p><p>这就是这道题比较麻烦的地方。</p><h3 id="T10-P1163-银行贷款"><a href="#T10-P1163-银行贷款" class="headerlink" title="T10 P1163 银行贷款"></a><a href="https://www.luogu.com.cn/problem/P1163">T10 P1163 银行贷款</a></h3><p><del>这 是 二 分 ?</del></p><p><del>我记得当时调了三个小时没 A 气得直接把讨论区求助代码调对了结果自己还是没 A</del></p><p><strong>Part 1 确定搜索范围</strong></p><p>反正二分的基本就是答案，所以就直接套班子。</p><p>利率的左端 $l$ 就是 $0$ ，而右端就需要一些<del>动画知识</del>。<del>根据阿凡达</del>我们知道高利贷的利率不会超过 $10$ <del>抢钱</del>所以把 $r$ 定义为 $10.0$ 。</p><p>因为误差不需要超过 $0.1%$ ，把 while 里的条件写为 $r-l&gt;0.0001$ （精度）</p><p>注意的是 $l$ ， $r$ ， $mid$ ，全部要定义为 double 。</p><p>ps ：最后输出的时候一定要乘 $100$ ,题目求的是百分数.</p><p><strong>Part 2 check 函数</strong></p><p>比较方便的就是计算在这个利率下是否能刚好还玩 （多还<del>亿</del>一点点也可以）</p><p>设 $t$ 为剩余的钱， $x$ 为待验证的利率，计算利率的时候简便的方法就是把 $t$ 每次增大 $x$ 倍，再减去每个月还的钱。</p><p>AC code :</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">double</span> p,l,r,mid;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">check</span><span class="params">(<span class="keyword">double</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> t=p; <span class="comment">//刚开始剩余的钱数就是贷款原值</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) t=(<span class="number">1.0</span>+x)*<span class="number">1.0</span>*t<span class="number">-1.0</span>*n;</span><br><span class="line">    <span class="keyword">return</span> t&lt;=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;p&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    l=<span class="number">0.0</span>;r=<span class="number">10.0</span>; </span><br><span class="line">    <span class="keyword">while</span>(r-l&gt;<span class="number">0.0001</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        mid=(l+r)/<span class="number">2.0</span>;</span><br><span class="line">        <span class="keyword">if</span>(check(mid)) l=mid;</span><br><span class="line">        <span class="keyword">else</span> r=mid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.1lf&quot;</span>,<span class="number">1.0</span>*l*<span class="number">100.0</span>); <span class="comment">//百分数！</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="T11-P3743-kotori的设备"><a href="#T11-P3743-kotori的设备" class="headerlink" title="T11 P3743 kotori的设备"></a><a href="https://www.luogu.com.cn/problem/P3743">T11 P3743 kotori的设备</a></h3><p><del>蓝题？玩你m</del></p><p><strong>Part 1 无限使用</strong></p><p>很简单，只要所有设备一秒内消耗的能量小于等于充电宝一秒内能提供的能量，就意味着能够一直充电。</p><p><strong>Part 2 主程序</strong></p><p>既然所有和的最大值是 $10^{10}$ 那么就把右边界定义为 $10^{10}$  。</p><p>然后，题目要求的精度是 $10^{-4}$ ，所以当 $r$ 和 $l$ 相差小于等于 $10^{-4}$  时结束 while 循环。</p><p>这样看似范围很大，但是二分的时间复杂度是 $O (\log<br>n）$ ，即使是大数据也就几十而已。</p><p><strong>Part 3 check 函数</strong></p><p>设待验证的时间为 $x$ 则充电宝最多可以提供 $x*p$ 的能量。设 $t$ 表示在时间 $x$ 内所需充电宝能量，则如果一个设备在 $x$ 秒内消耗的能量小于原来储存的能量，就不需要使用充电宝。</p><p>反之，如果要使用充电宝，那么充电宝消耗的能量就是这个设备在 $x$ 秒内消耗的能量减去原储存能量。用 $t$ 做一个累加即可。</p><p>最后如果 $t$ 小于等于 $p$ ，就意味着这个时间是合法的。</p><p>AC code ：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">aksres</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">double</span> x,y;</span><br><span class="line">&#125;a[<span class="number">233333</span>];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">double</span> p,sum,l,r,mid;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">check</span><span class="params">(<span class="keyword">double</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> s=x*p,t=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) t+=max(<span class="number">0</span>,x*a[i].x-a[i].y);</span><br><span class="line">    <span class="keyword">return</span> t&lt;=s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;p;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lf%lf&quot;</span>,&amp;a[i].x,&amp;a[i].y);</span><br><span class="line">        sum+=a[i].x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(sum&lt;=p) &#123;<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;-1&quot;</span>;<span class="keyword">return</span> <span class="number">0</span>;&#125;</span><br><span class="line">    l=<span class="number">0.0</span>;r=<span class="number">1e10</span>;</span><br><span class="line">    <span class="keyword">while</span>(r-l&gt;<span class="number">0.0001</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        mid=(l+r)/<span class="number">2.0</span>;</span><br><span class="line">        <span class="keyword">if</span>(check(mid)) l=mid;</span><br><span class="line">        <span class="keyword">else</span> r=mid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.6lf&quot;</span>,l);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;T1-P2249-【深基13-例1】查找&quot;&gt;&lt;a href=&quot;#T1-P2249-【深基13-例1】查找&quot; class=&quot;headerlink&quot; title=&quot;T1 P2249 【深基13.例1】查找&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P2249&quot;&gt;T1 P2249 【深基13.例1】查找&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;二分查找的板子&lt;/p&gt;</summary>
    
    
    
    
    <category term="题解" scheme="https://aksres.github.io/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>乱七八糟的公告</title>
    <link href="https://aksres.github.io/2020/09/20/%E4%B9%B1%E4%B8%83%E5%85%AB%E7%B3%9F%E7%9A%84%E5%85%AC%E5%91%8A/"/>
    <id>https://aksres.github.io/2020/09/20/%E4%B9%B1%E4%B8%83%E5%85%AB%E7%B3%9F%E7%9A%84%E5%85%AC%E5%91%8A/</id>
    <published>2020-09-20T15:44:31.000Z</published>
    <updated>2021-02-26T12:23:56.714Z</updated>
    
    <content type="html"><![CDATA[<p><del>热烈祝贺</del>菜 Aksres 的网站在 8.27 搭建完毕 ！</p><a id="more"></a><hr><h3 id="Part-1-关于"><a href="#Part-1-关于" class="headerlink" title="Part 1 关于"></a>Part 1 关于</h3><p>本站点是一个基于 Github+Hexo 的 blog 型网站，使用主题为  yilia</p><p><del>没了，就这么多</del></p><h3 id="Part-2-站内规则"><a href="#Part-2-站内规则" class="headerlink" title="Part 2 站内规则"></a>Part 2 站内规则</h3><p><del>只要你不把这个网站黑掉干啥都行</del></p><h3 id="Part-3-一些注意事项"><a href="#Part-3-一些注意事项" class="headerlink" title="Part 3 一些注意事项"></a>Part 3 一些注意事项</h3><ul><li><del>某些</del>一堆页面会404，正在修（咕咕咕</li><li>ipad 或者手机的某些地方会出现渲染问题，见谅。 <del>好像根本打不开</del></li><li>不知道为什么显示文章的地方可能会由于一些 hexo 的玄学原因出现卡顿情况，见谅。</li><li>分享功能坏了</li><li>打赏怎么关掉啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊</li></ul><h3 id="Part-4-鸣谢"><a href="#Part-4-鸣谢" class="headerlink" title="Part 4 鸣谢"></a>Part 4 鸣谢</h3><p>感谢千古神犇<a href="https://www.luogu.com.cn/user/23243">Venus</a>的极其详细的<a href="https://www.luogu.com.cn/blog/Venus/build-hexo-github-blog">日报</a>讲解</p><p>感谢<a href="https://www.luogu.com.cn/user/110634">zhanghengrui</a>神仙，<a href="https://www.luogu.com.cn/user/60075">WEMS_PZC</a>神仙，<a href="https://www.luogu.com.cn/user/311984">tim1103</a>神仙提供的 Git ，Sublime下载地址。</p><p><del>感谢我自己垃圾至极的搭建给大家带来了亿点点麻烦</del></p><hr><p>完 结 撒 花</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;del&gt;热烈祝贺&lt;/del&gt;菜 Aksres 的网站在 8.27 搭建完毕 ！&lt;/p&gt;</summary>
    
    
    
    
    <category term="公告" scheme="https://aksres.github.io/tags/%E5%85%AC%E5%91%8A/"/>
    
  </entry>
  
</feed>
